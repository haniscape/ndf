<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\User;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 */
function najm_portal_theme_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
}

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
function najm_portal_theme_preprocess_menu__account(&$variables) {
  $uid = \Drupal::routeMatch()->getRawParameter('user');
  if (!empty($uid)) {
    $user = User::load($uid);
  } else {
    $user = User::load(\Drupal::currentUser()->id());
  }

  if (isset($user) && !empty($user->get('user_picture'))) {
    // Check if user has image.
    if ($user->get('user_picture')->entity != null && !empty($user->get('user_picture')->entity->url())) {
      // $picture = $user->get('user_picture')->entity->url();
      $picture = $user->user_picture->entity->getFileUri();
      $style = \Drupal::entityTypeManager()->getStorage('image_style')->load('profile_image_150x150');
      $picture = $style->buildUrl($picture);
    } else {
      // Load the default image.
      $pic_field = \Drupal\field\Entity\FieldConfig::loadByName('user', 'user', 'user_picture');
      $default_image = $pic_field->getSetting('default_image');
      $file = \Drupal::service('entity.repository')->loadEntityByUuid('file', $default_image['uuid']);
      if (!empty($file)) {
        $picture = file_create_url($file->getFileUri());
      } else {
        $themeHandler = \Drupal::service('theme_handler');
        $themePath = $themeHandler->getTheme($themeHandler->getDefault())->getPath();
        $picture = base_path() . $themePath . '/images/account_default.png';
      }
    }
  }

  $variables['user_picture'] = $picture;
}

/**
 * Implements hook_preprocess_page().
 */
function najm_portal_theme_preprocess_page(&$variables) {
  $variables['base_path'] = base_path();
  $variables['route_name'] = \Drupal::routeMatch()->getRouteName();
  // Clear Cache.
  // \Drupal::service('page_cache_kill_switch')->trigger();
  // Load main styles library (LTR/RTL)
  $curr_lang = \Drupal::languageManager()->getCurrentLanguage()->getId();
  if ($curr_lang == 'ar') {
    $variables['#attached']['library'][] = 'najm_portal_theme/styles-rtl';
  }
  else {
    $variables['#attached']['library'][] = 'najm_portal_theme/styles-ltr';
  }
}

/**
 * Implements hook_preprocess_paragraph().
 */
function najm_portal_theme_preprocess_paragraph(&$variables) {
  if (isset($variables['content']['field_link'])) {
    $btnClass = strtolower($variables['content']['field_button_style']['0']['#markup']);
    $variables['content']['field_link'][0]['#attributes']['class'][] = 'text-' . $btnClass;
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function najm_portal_theme_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  // Makes anonymous user read from a specific template for login/register/reset pass.
  if (\Drupal::currentUser()->isAnonymous() && $suggestions[0] == "page__user") {
    $suggestions[] = 'page__user__anonymous';
  }
}

/**
 * Implements hook_preprocess_html().
 */
function najm_portal_theme_preprocess_html(&$variables) {
  // Get the current path
  $route_name = \Drupal::routeMatch()->getRouteName();

  // Assign it to body class
  if ($route_name == 'entity.developer_app.collection_by_developer') {
    $variables['attributes']['class'][] = 'my-apps-page';
  } elseif ($route_name == 'entity.developer_app.edit_form_for_developer') {
    $variables['attributes']['class'][] = 'app-edit-page';
  } elseif ($route_name == 'entity.developer_app.analytics_for_developer') {
    $variables['attributes']['class'][] = 'app-analytics-page';
  } elseif ($route_name == 'entity.developer_app.delete_form_for_developer') {
    $variables['attributes']['class'][] = 'app-delete-page';
  } elseif ($route_name == 'entity.developer_app.canonical_by_developer') {
    $variables['attributes']['class'][] = 'app-view-page';
  } elseif ($route_name == 'entity.developer_app.add_form_for_developer') {
    $variables['attributes']['class'][] = 'app-add-page';
  }
}

/**
 * Implements hook_theme_suggestions_alter().
 */
function najm_portal_theme_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook == 'table') {
    $suggestions[] = 'table__' . str_replace('-', '_', $variables['attributes']['class'][0]);
    $suggestions[] = 'table__' . str_replace('.', '_', \Drupal::routeMatch()->getRouteName());
    $suggestions[] = 'table__' . str_replace('.', '_', $variables['attributes']['class'][0] . '__' . \Drupal::routeMatch()->getRouteName());
  }
}
