<?php

use Drupal\Core\Template\Attribute;

/**
 * @file
 * SUBTHEME theme file.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function ndf_theme_preprocess_html(&$variables) {
  // Add class to body tag based on role.
  $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $variables['base_url'] = base_path();
  $current_path = \Drupal::service('path.current')->getPath();
  $variables['current_path'] = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);
  $variables['attributes']['class'][] = "lang-".$language;
  $url_query_string = \Drupal::request()->getQueryString();
  $variables['url_query_string'] = $url_query_string;

  // Set body class.
  $current_route_name = \Drupal::routeMatch()->getRouteName();

  if ($current_route_name === 'entity.developer_app.collection_by_developer') {
    $variables['attributes']['class'][] = 'path-apps-list';
  } elseif ($current_route_name === 'entity.developer_app.canonical_by_developer') {
    $variables['attributes']['class'][] = 'path-app-view';
  } elseif ($current_route_name === 'entity.developer_app.analytics_for_developer') {
    $variables['attributes']['class'][] = 'path-app-analytics';
  } elseif ($current_route_name === 'entity.developer_app.edit_form_for_developer') {
    $variables['attributes']['class'][] = 'path-app-edit';
  } elseif ($current_route_name === 'entity.developer_app.add_form_for_developer') {
    $variables['attributes']['class'][] = 'path-add-app';
  }
}

/**
 * Implements hook_page_attachments_alter().
 */
function ndf_theme_page_attachments_alter(&$attachments){
  $language = \Drupal::languageManager()->getCurrentLanguage();
  $lang_css = $language->getId() === 'en' ? 'ltr' : 'rtl';
  $attachments['#attached']['library'][] = 'ndf_theme/styles-' . $lang_css;
}

/**
 * Implements hook_preprocess_page_title().
 */
function ndf_theme_preprocess_page_title(&$variables) {
  $current_route_name = \Drupal::routeMatch()->getRouteName();
  if ($current_route_name=== 'user.register') {
    // Set the page title
    $variables['title'] = t('Create account');
  } elseif ($current_route_name === 'entity.developer_app.add_form_for_developer') {
    $variables['title'] = t('Create New App');
  }
}

/**
 * Implements hook_preprocess().
 */
function ndf_theme_preprocess(&$variables) {
  // Get user Id.
  $variables['current_uid'] = \Drupal::currentUser()->id();

  // Get app id in app page for twig.
  $route_name = \Drupal::routeMatch()->getRouteName();
  if ($route_name === 'entity.developer_app.canonical_by_developer') {
    $app = \Drupal::routeMatch()->getParameter('app');
    $variables['current_app_name'] = $app->getName();
  }

  // Set current language in vars.
  $language_interface = \Drupal::languageManager()->getCurrentLanguage();
  $variables['curr_lang'] = $language_interface->getId();
}


/**
 * @param array $suggestions
 * @param array $variables
 * @param $hook
 */
function ndf_theme_theme_suggestions_fieldset_alter(array &$suggestions, array $variables, $hook) {
  $route_name = \Drupal::routeMatch()->getRouteName();

  if (isset($variables['element']['#name'])) {
    $id = str_replace("-", "_", $variables['element']['#name']);
    $suggestions[] = $hook . '__' . $id;

    if ($route_name == 'entity.developer_app.edit_form_for_developer') {
      $suggestions[] = $hook . '__' . str_replace('-','_', 'developer_app_edit_form' . '--' . $variables['element']['#parents']['0'] . '--' . $variables['element']['#type']);
    }
  }
}

/**
 * Implements hook_suggestions_form_element_alter().
 */
function ndf_theme_theme_suggestions_form_element_alter(array &$suggestions, array $variables, $hook) {
  // Get the current path
  $route_name = \Drupal::routeMatch()->getRouteName();
  if ($route_name === 'entity.developer_app.add_form_for_developer') {
    if (isset($variables['element']['#type']) && $variables['element']['#type'] === 'checkbox') {
      $suggestions[] = $hook . '__' . str_replace('-','_', 'developer_app_edit_form' . '--' . $variables['element']['#parents']['0'] . '--' . $variables['element']['#type']);
    }
  } elseif ($route_name === 'entity.developer_app.edit_form_for_developer') {
    if (isset($variables['element']['#type']) && $variables['element']['#type'] == 'checkbox') {
      $suggestions[] = $hook . '__' . str_replace('-','_', 'developer_app_edit_form' . '--' . $variables['element']['#parents']['0'] . '--' . $variables['element']['#type']);
    }
  }

}

/**
 * Implements template_preprocess_fieldset().
 */
function ndf_theme_preprocess_fieldset(&$variables) {
  // Check if app key item.
  if (isset($variables['element']['api_products'])) {
    $id = $variables['element']['#id'];
    $id = str_replace("edit-credential-", "", $id);
    if (!str_contains($id, '-')) {

      // Get key name.
      $key_service = \Drupal::service('apigee_key_name.key_services');
      $key_name = $key_service->getKey($id);
      if ($key_name) {
        $variables['app_key_name'] = $key_name;
      } else {
        $title = substr($variables['element']['#title'], -12);

        if (str_contains($title, 'Credential')) {
          $variables['app_key_name'] = $title;
        } else {
          $variables['app_key_name'] = t('Credential');
        }
      }

      // Get key status.
      if (str_contains($variables['element']['#title'], 'Approved') || str_contains($variables['element']['#title'], 'موافق عليه')) {
        $variables['app_key_status'] = '<span class="wrapper--status status-value-approved indicator-status-ok"> <span class="label-status">'. t('Approved') .'</span> </span>';
      } elseif(str_contains($variables['element']['#title'], 'Revoked') || str_contains($variables['element']['#title'], 'منقوض')) {
        $variables['app_key_status'] = '<span class="wrapper--status status-value-revoked indicator-status-error"> <span class="label-status">'. t('Revoked') .'</span> </span>';
      }
    }
  }
}




